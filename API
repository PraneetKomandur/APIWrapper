import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

public class WeatherApp {
    private final String baseUrl = "https://api.openweathermap.org/data/2.5";
    private final String apiKey;

    public WeatherApp(String apiKey) {
        this.apiKey = apiKey;
    }

    public String getWeather(String city) {
        try {
            HttpClient httpClient = HttpClients.createDefault();
            String endpoint = baseUrl + "/weather?q=" + city + "&appid=" + apiKey;
            HttpGet httpGet = new HttpGet(endpoint);

            HttpResponse response = httpClient.execute(httpGet);

            if (response.getStatusLine().getStatusCode() == 200) {
                String jsonResponse = EntityUtils.toString(response.getEntity());
                // You can parse the JSON response here and extract weather information.
                // Example: String weatherDescription = extractWeatherDescription(jsonResponse);
                return jsonResponse;
            } else {
                System.err.println("Error: Failed to retrieve weather data. Status code: " +
                        response.getStatusLine().getStatusCode());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Error: Something went wrong while fetching weather data.");
        }
        return null;
    }

    public static void main(String[] args) {
        String apiKey = "YOUR_OPENWEATHERMAP_API_KEY";
        WeatherApp weatherApp = new WeatherApp(apiKey);

        String city = "New York";
        String weatherData = weatherApp.getWeather(city);

        if (weatherData != null) {
            System.out.println("Weather Data: " + weatherData);
        } else {
            System.out.println("Failed to retrieve weather data.");
        }
    }
}
